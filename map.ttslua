#include utils/debug
#include utils/exports

function onLoad()
    Map, Reset = import('Map'), {}
end

function showBorders() self.setVectorLines(Lines or {}) end
function hideBorders() self.setVectorLines({}) end

-- Collision Checks

function onCollisionEnter(collision_info)
    local obj = collision_info.collision_object
    local pos = self.positionToLocal(obj.getPosition())
    if enabled and pos ~= Reset.last then
        if Reset.pid then Wait.stop(Reset.pid) end
        Reset = {last = pos, pid = Wait.frames(function () last_pos = nil end, 1)}
    else return end
    local region, msg = Map:inRegion(pos), string.format('coords: X=%.4f Z=%.4f', pos.x, pos.z)
    if region then
        local y = Map:rotationToCenter(pos)
        debug(msg, string.format(', angle: %.1f, region: %s', y, region))
        if #obj.getAttachments() > 0 then
            obj.setRotationSmooth({0, y, 0}, true, true)
            obj.setDescription('In region ' .. Map.regions[region]:colorizedName())
    end else debug(msg) end
end
