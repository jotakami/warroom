Object = {}
Object.__meta = {__index = |t, k| Object[k] or t.obj[k]}
setmetatable(Object, {__call = function (T, obj) if obj == nil then
    C = {}
    C.__meta = {__index = C}
    setmetatable(C, {__index = T, __call = function ()  end})
else
    local t = {obj = obj}
    setmetatable(t, T.__meta)
    return t
end end})

function Object:stash()
    self.highlightOff()
    self.setPositionSmooth(self.getPosition() + vector(0, 3, 0))
    return self:notMoving():next(|| self.destruct())
end

function Object:notMoving(value)
    return Promise.condition(|| not self.isSmoothMoving(), value)
end
